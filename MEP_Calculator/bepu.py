import glob as gb
import os
import warnings
import pandas as pd
import re
import xlwings as xw # Xlwings is a Python library that makes it easy to call Python from Excel
# used to filter out warning messages generated by modules or functions called in your code.
warnings.filterwarnings("ignore")

def get_BEPU_report(name):
    try:
        with open(name) as f:
            flist = f.readlines()

        bepu_count = [] 
        for num, line in enumerate(flist, 0):
            if 'BEPU' in line:
                bepu_count.append(num)
            if 'PS-H' in line:
                numend = num
        numstart = bepu_count[0]
        bepu_rpt = flist[numstart:numend]

        bepu_str = []
        other_str = []
        prev_line = None
        for line in bepu_rpt:
            if prev_line:
                if ('HOURS' in line or 'COOLING' in line or 'HEATING' in line):
                    bepu_str.append(line)
                    other_str.append(prev_line)
            prev_line = line

        result = []
        for line in bepu_str:
            splitter = line.split()
            space_name = " ".join(splitter[:-13])
            bepu_list = splitter[-13:]
            bepu_list.insert(0, space_name)
            result.append(bepu_list)
        bepu_df = pd.DataFrame(result)

        other_result = []
        for line in other_str:
            splitter = line.split()
            space_name = " ".join(splitter[:1])
            other_list = splitter[1:]
            other_list.insert(0, space_name)
            other_result.append(other_list)
        other_df = pd.DataFrame(other_result)

        merged_column = other_df.apply(lambda x: ' '.join(str(val) for val in x if val is not None), axis=1)
        other_df = pd.DataFrame({'': merged_column})
        bepu_df = pd.concat([other_df, bepu_df], axis=1)

        bepu_df.columns = ['BEPU-SOURCE', 'BEPU-UNIT', 'LIGHTS', 'TASK-LIGHTS', 'MISQ-EQUIP', 'SPACE-HEATING',
                           'SPACE-COOLING', 'HEAT-REJECT', 'PUMPS & AUX', 'VENT FANS', 'REFRING-DISPLAY',
                           'HT-PUMP-SUPPLEMENT', 'DOMEST-HOT-WTR', 'EXT-USAGE', 'TOTAL']

        bepu_df = bepu_df[bepu_df['BEPU-UNIT'].str.contains(r'\b.\b|\b\b')]
        bepu_df = bepu_df[bepu_df['BEPU-SOURCE'].str.contains(r'\b.\b|\b\b')]
        bepu_df = bepu_df[~bepu_df['BEPU-UNIT'].str.contains(r'\.|^\d+$')]
        bepu_df = bepu_df[~bepu_df['BEPU-SOURCE'].str.contains(r'\.|^\d+$')]
        bepu_df = bepu_df[~bepu_df['LIGHTS'].str.contains(r'\:|^\d+$')]

        bepu_df.columns = ['BEPU-SOURCE', 'BEPU-UNIT', 'LIGHTS', 'TASK-LIGHTS', 'MISQ-EQUIP', 'SPACE-HEATING',
                           'SPACE-COOLING', 'HEAT-REJECT', 'PUMPS & AUX', 'VENT FANS', 'REFRING-DISPLAY',
                           'HT-PUMP-SUPPLEMENT', 'DOMEST-HOT-WTR', 'EXT-USAGE', 'TOTAL-BEPU']

        # Add run name
        value_before_backslash = ''.join(reversed(name)).split("\\")[0]
        name1 = ''.join(reversed(value_before_backslash))
        run_name = name1.rsplit(".", 1)[0]
        bepu_df.insert(0, 'RUNNAME', run_name)

        # -------------------------------
        # Extract TOTALS and PERCENTAGE data
        # -------------------------------
        extra_rows = []
        for line in flist:
            if any(keyword in line for keyword in ['TOTAL ELECTRICITY', 'TOTAL STEAM', 'TOTAL CHILLED-WATE',
                                                    'PERCENT OF HOURS', 'HOURS ANY ZONE']):
                line_clean = ' '.join(line.strip().split())  # remove extra spaces
                extra_rows.append([run_name, line_clean] + [''] * (len(bepu_df.columns) - 2))

        if extra_rows:
            extra_df = pd.DataFrame(extra_rows, columns=bepu_df.columns)
            bepu_df = pd.concat([bepu_df, extra_df], ignore_index=True)

        bepu_df.index.name = name
        bepu_df = bepu_df[['BEPU-SOURCE']]
        bepu_df = bepu_df.tail(2)
        return bepu_df

    except Exception as e:
        columns = ['RUNNAME', 'BEPU-SOURCE', 'BEPU-UNIT', 'LIGHTS', 'TASK-LIGHTS', 'MISQ-EQUIP', 'SPACE-HEATING',
                   'SPACE-COOLING', 'HEAT-REJECT', 'PUMPS & AUX', 'VENT FANS', 'REFRING-DISPLAY',
                   'HT-PUMP-SUPPLEMENT', 'DOMEST-HOT-WTR', 'EXT-USAGE', 'TOTAL-BEPU']
        return pd.DataFrame(columns=columns)
